name: Build Module

env:
### EDIT THIS ###
  MODULE_NAME: markettest
#################
on:
  push:

jobs:
  save-module-name:
    runs-on: ubuntu-20.04
    steps:
      - name: Save MODULE_NAME envvar to outputs
        id: save-name
        run: echo "::set-output name=module_name::${{ env.MODULE_NAME }}"
      - name: Save caps MODULE_NAME to outputs
        id: save-caps
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ env.MODULE_NAME }}
    outputs:
      module_name: ${{ steps.save-name.outputs.module_name }}
      module_name_caps: ${{ steps.save-caps.outputs.uppercase }}

  build-inviwo-with-module:
    needs: save-module-name
    uses: xeTaiz/inviwo-marketplace/.github/workflows/inviwo.yml@updated
    with:
      ext_modules_repo: ${{ github.repository }} 
      ext_module_name: ${{ needs.save-module-name.outputs.module_name }}
      ext_module_cmake: "-DIVW_MODULE_${{ needs.save-module-name.outputs.module_name_caps }}=ON"

  release-module:
    needs: build-inviwo-with-module
    if: always()
    strategy:
      matrix:
        os: [windows-latest, ubuntu-20.04] # macos-latest
        include:
          - os: 'windows-latest'
            installer: 'inviwo-installer-win'
            baname: 'ext-module-win'
            libprefix: 'bin/Release/inviwo-module-'
            libext: '.dll'
          # - os: 'macos-latest'
          #   installer: 'inviwo-installer-macos'
          #   baname: 'ext-module-macos'
          #   libprefix: 'build/lib/libinviwo-module-'
          #   libext: '.so'
          - os: 'ubuntu-20.04'
            installer: 'inviwo-installer-ubuntu'
            baname: 'ext-module-ubuntu'
            libprefix: 'lib/libinviwo-module-'
            libext: '.so'
    runs-on: ${{ matrix.os }}
    steps:
    - name: Download Build dir artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.baname }}

    - name: Log directory
      run: |
        ls -l .
        for dir in ./*/; do ls -l $dir; done

    - name: Zip Module Data
      uses: papeloto/action-zip@v1
      with:
        files: ${{ matrix.libprefix }}${{ env.MODULE_NAME }}${{ matrix.libext }} modules/${{ env.MODULE_NAME }}
        dest: ${{ env.MODULE_NAME }}.zip

    - name: Release Module Artifact
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
          tag_name: release/${{ github.sha }}-${{ runner.os }}
          release_name: Release ${{ github.sha }}-${{ runner.os }}
          body: |
            Automatic Release to Inviwo Marketplace.
          draft: false
          prerelease: false

    - name: Upload Release Assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./${{ env.MODULE_NAME }}.zip
        asset_name: ${{ env.MODULE_NAME }}.zip
        asset_content_type: application/zip
